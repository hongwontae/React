1. React 생명주기
1-1. 정의
=> 컴포넌트가 생성되고 업데이트되며, 파괴될 때까지 일련의 과정을 의미한다.

1-2. 단계
Mounting, Update, UnMounting으로 나뉘어진다.

1-3. Mounting : 컴포넌트가 처음 DOM에 삽입될 때의 과정
1. constructor(props) : 컴포넌트가 처음 생성될 떄 호출된다. 초기 상태와 인스턴스 속성을 설정하는데 사용된다. 
또한 props를 인자로 받아서 super(props)를 통해 부모 컴포넌트가 내려준 props를 받는다.
(해당 컴포넌트가 어떤 함수을 가지고 있는지 어떤 변수를 가지고 있는지 어떤 상태를 가지고 있는지를 파악한다. => 인스턴스 속성을 설정한다.)
(메서드 바인딩도 여기서 설정한다.)

2. static getDerivedStateFromProps(nextProps, prevState) : 정적 메서드로 컴포넌트가 새로운 props를 받거나 state가 변경될
때 상태를 업데이트할 수 있는 메서드이다. 컴포넌트가 마운트되거나 업데이트될 떄 호출된다.

2-1. getDerivedStateFromProps는 componentWillReceiveProps를 대체하기 위해 만들어졌다.

2-2. 컴포넌넌트의 state나 props가 변해야할 떄 props와 state 변화를 동기화하는 것

2-3. 순수함수/ 상태를 업데이트 하기 위해 새 객체 반환, 업데이트 할 필요없을 경우 null을 반환한다.

2-4. getDerivedStateFromProps(nextProps, prevState)
=> nextProps는 부모 컴포넌트로부터 전달받은 새로운 props
=> prevState는 props가 변경되기 전의 상태
=> 컴포넌트가 마운트될 떄, 새로운 props를 받을 떄, setState가 호출될 떄 호출된다.
=> 마운트 시 nextProps는 construtor의 this.props와 같다.

2-5. 일반적으로 constructor을 사용해서 값을 초기화하여 사용하지만 getDerivedStateFromProps()를 사용하면
props로 받은 상태 값을 초기화할 떄 유용하게 사용된다.


3. render()
3-1. 필수 메서드이고 컴포넌트의 UI를 반환한다.
3-2. React Element를 반환한다. => render 메서드가 호출되면 React.createElement()도 호출된다.
3-3. 순수 함수여야 한다./ 사이드 이펙트 X
3-4. render의 반환값으로 가상 DOM을 업데이트하고 실제 DOM에 적용
(JSX 존재 => RENDER 호출 => 각 JSX React.createElement를 통해 리액트 엘리먼트 생성 => 가상 DOM 생성 => DOM 생성)
3-5. 상태나 props가 변경되면 render에 존재하는 모든 JSX가 React.createElement()의 대상이 되는 것이다.

3-6. shouldComponentUpdate(nextProps, nextState) {...}
=> render가 호출되기 전에 업데이트될지 여부를 결정하는 메서드이다.
=> nextProps는 컴포넌트가 다음 업데이트에서 받게 될 새로운 props
=> nextState는 컴포넌트가 다음 업데이트 주기에서 가지게 될 새로운 state


4. componentDidMount()
4-1. 컴포넌트가 처음 렌더링된 이후에 호출된다.
4-2. DOM 작업이나 네트워크 요청 등의 사이드 이펙트 처리할 떄 사용한다.
4-3. componentDidMount()가 실행되어서 상태가 변경되거나 DOM이 변경되면 React가 알아서 리렌더링한다.






1. React 기존 렌더링 방식
1-1. 렌더링 방식은 동기적 => 상태가 변경되면 즉시 리렌더링 => 리렌더링이 완료될떄까지 다른 작업 처리 x
=> 큰 데이터를 처리하는 경우에서 나쁜 사용자 경험을 줄 수 있다./ 버벅거리거나 UI가 멈추는 경험

2. 동시성 모드의 작동 방식
2-1. 직업 중단과 재개 : 큰 작업을 여러 개로 나누고 필요할 떄 작업을 중단했다가 나중에 재개가능
2-2. 유지 가능한 상태 : 컴포넌트 렌더링되는 도중에 다른 작업이 필요해도 현재 상태는 계속 유지
2-3. 낮은 우선순위 작업 지연 : 업데이트 우선 순위 파악하고 중요한 업데이트 먼저 처리


3. Summary
리액트 18이전에는 상태가 변경되면 리렌더링되면서 완료전까지 다른 작업을 처리할 수 없었기에 대규모 작업 처리할 시
나쁜 사용자 경험을 주었다. 18 이후에는 동시성 모드라는 개념을 받아들인다. React 작업 우선순위 판단, 사용자 인터랙션
이 중요한 경우 최우선 처리하는 UI가 끊기지 않도록 한다.

ex) 인풋의 데이터를 받아서 큰 작업 처리
=> 인풋의 데이터 자체를 확실히 받고 큰 작업 처리를 하는 것이 효율적이다.
=> 인풋 데이터 처리마다 큰 작업 처리를 한 번씩하는게 비효율적이다.

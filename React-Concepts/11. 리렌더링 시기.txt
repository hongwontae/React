1. 상태를 업데이트하는 코드가 실행되었을 떄(setState) 즉시 처리하는게 아니고 상태 업데이트를 예약한다.

2. 상태 업데이트 예약은 업데이트 큐에 들어간다. 이 후 적절한 시기에 리렌더링이 실행된다.


3. 배치 처리 : 여러 개의 상태 업데이트가 하나의 렌더링 사이클에서 실행되는 것
3-1. 과거에는 이벤트 핸들러에서만 배치처리가 가능했다.
3-2. 최근에 React 업데이트를 통해 async/await 내부, Promise 사이클 내부, setTimeout 등 여러 함수에서 배치처리가 가능해졌다.

ex) fetch().then(data => {
    setData1(data)
    setData2(data)
}) => 과거에는 하나씩 리렌더링, 현재는 배치처리되어서 한 사이클내에서 처리가능


4. *** 특징 ***
4-1. 업데이트 큐에 들어간 리렌더링 예약 호출 시점은 JS 실행컨텍스트가 비워져 있을 떄이다.
4-2. 함수 내부에 동기 코드만 존재한다면 동기 코드가 전부 완료된 뒤에 실행된다.
4-3. 함수 내부에 비동기 코드가 존재한다면 비동기 코드가 테스크 큐에 들어간 시점에 리렌더링이 실행된다.
(실행 컨텍스트 비워져 있기 때문이다.)

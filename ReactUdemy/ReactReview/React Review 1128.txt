1. 데이터를 내려주기 위해 최상단 부모에서 DummyData를 만들고 props로 내려준다.
2. 해당 데이터는 initValue로 화면를 구성하는 컴포넌트에 props로 내린다.
3. props를 받은 하위 컴포넌트에서 동적으로 표현하기 위해 JSX 동적 표현식 {}를 통해 map를 사용해서 동적으로 표현한다.
4. 데이터를 끌어올리기 위해서 props를 이용한다. 부모 컴포넌트에서 함수를 만들고 사용자 지정 컴포넌트에서 props를 통해 내려준다. 그리고 하위 컴포넌트에서 prpos를 호출하면 부모 컴포넌트가 해당 데이터를 사용할 수 있다.
5. 부모 컴포넌트의 setFunc이 호출되면서 전체 컴포넌트가 리렌더링이 되어 데이터들이 동적으로 변한다.

** useState의 prevState
const [data, setData] = useState('data');
const clickHandler = (renderData)=>{
	setData(prevData=>{
	[...prevData, renderData]
})
}
=> prevState는 항상 이전 상태값을 갖고 있다. 그렇기 때문에 이전값에 기대어 리렌더링 할 떄 확실하고 안전하고 렌더링할 수 있다.
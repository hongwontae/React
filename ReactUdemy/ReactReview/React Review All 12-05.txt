1. React를 로컬에 생성하는 방법 => npx create-react-app 파일명


2. 리액트의 특징

2-1. Data Flow
=> 데이터의 흐름이 단방향이다. 위에서 아래로 흐른다.

2-2. Component 기반 구조
=> UI를 만들 떄 여러 컴포넌트를 쪼개서 만든다. => 재사용성과 반복회피가 특징이다.

2-3. Virtual Dom
=> Virtual Dom은 가상의 DOM를 의미한다. 이벤트가 발생할 떄마다 Virtual Dom를 생성하고 다시 렌더링할 떄마다 실제 DOM과 비교하고 전후 상태를 비교해, 변경이 필요한 최소한의 변경사항만 실제 DOM에 반영해, 앱의 효율성과 속도를 개선할 수 있다.

2-4. Props and State
props => 부모가 자식에게 내려주는 읽기 전용 데이터를 의미한다.
state => State는 데이터를 의미하고 코드에 따라 동적으로 값이 변경된다. 각각의 state는 독립적이다.

2-5. JSX
=> JavaScript를 확장한 문법이다.

2-6. 리액트 서버
리액트 프로젝트를 생성하면 앱에는 웹 서버가 내장되어 있다.


** localhost 
=> 내 컴퓨터 주소를 가르킨다. localhost의 요청은 자신의 컴퓨터에 전달된다. : 뒤에 번호는 포트이다. 포트 번호는 컴퓨터에서 실행되고 있는 서버를 구분하는 번호이다.


3. 컴포넌트란?
HTML+CSS+JS 로직이 합쳐진 덩어리이다. 컴포넌트의 장점은 재사용성과 코드 분리이다.
컴포넌트는 JavaScript 함수이다. JSX가 리턴된다.


4. React 프로젝트 동작 원리
브라우저는 React 자체를 이해하지 못한다. npm 프로세스가 React 파일을 읽고 브라우저 친화적인 코드로 변환하여 브라우저에게 전달하는 것이다.
처음으로 실행되는 파일은 ./src/index.js이다. index.js에서 렌더링할 장소를 찾고 어떤 파일이 들어가야 하는지 결정한다. => App.js가 해당된다.
js를 제외하고 import하는 파일들은 확장자를 명시해야 한다.


5. React Component and JSX
Component는 단지 JS 함수이다. 이 함수의 리턴값은 JSX이다.
Component를 통해 사용자 지정 태그로 사용하려면 파일명과 export default 파일명을 대문자로 지정해야 한다. React 프로젝트는 html 태그를 소문자로 사용자 지정 컴포넌트는 대문자로 인식한다.
JSX는 return 할 떄 하나의 루트요소만 반환되어야 한다. => ex) div안에 모두 포함된 JSX
JSX 내에서는 동적 표현식 {}를 사용할 수 있다. {}안에서는 JS 표현식을 사용할 수 있다. 표현식 => 값이 반환되는 것을 의미한다. (함수는 return 값이 존재해야 함)


6. props
부모 컴포넌트에서 자식 컴포넌트에 내려주는 읽기 전용 데이터를 의미한다. => 자식 컴포넌트에서 props를 수정할 수 없다.

props 전달 방법
6-1. 부모 컴포넌트에서 자식 사용자 지정 컴포넌트에 속성으로 부모 데이터를 넣는다. => 넣는 값은 자유롭다. (배열 안에 객체를 넣는 경우가 많다.)
6-2. 자식 컴포넌트에서



































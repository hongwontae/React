1. props
바닐라 JS는 함수의 인자를 통해서 다양한 값을 반환할 수 있다. 
이와 마찬가지로 React에서는 props라는 개념으로 다양한 값을 반환하고 제어한다.

html 요소가 속성을 가질 수 있듯이 컴포넌트도 속성을 가질 수 있다. 이를 props라고 한다.
데이터를 내부에 저장하지 않고 외부 컴포넌트에서 받을 수 있는 개념이다.

JSX 내의 {}는 속성의 값을 정의할 떄도 사용할 수 있다.

1. 상위 컴포넌트에서 데이터를 정의한다. 대체로 배열과 객체를 사용해서 정의한다.
2. 이 후 props로 내려줄 사용자 지정 컴포넌트 태그에 속성값으로 키=값 형태로 작성한다.
3. 데이터를 받을 하위 컴포넌트는 사용자 지정 함수의 매개변수로 값을 받아온다. (값 이름은 마음대로지만 일반적으로 props로 받는다.)
4. console.log(props) => {키:값, 키:값...}
5. props.title, props.age 이런 형태로 해당 컴포넌트에서 사용한다.


2. 컴포넌트를 여러 컴포넌트로 분할하기
다수의 props를 속성값으로 보내는 것이 아니라 전체 데이터 포인트를 전달할 수 있다.
=> 일일이 모든 배열이나 객체에 접근해서 보내는 것보다 하나의 포인트만 보내고 데이터를 받는 하위 컴포넌트에서 좀 더 많은 코드를 작성하는 것이다.

즉, props를 전달할 떄는 두 가지 방식이 존재한다. 데이터들을 하나씩 보내는 방법과 전체 데이터 포인트를 보내는 방식이다.

하위 컴포넌트에서 props를 받을 때 객체구조분해를 통해서 (let a = {title:hwt, age:20}) => let {title, age} = a;) 받을 수 있다. 


3. 컴포넌트에 바닐라 자바스크립트 로직 추가하기



























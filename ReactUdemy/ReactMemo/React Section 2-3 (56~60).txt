1. 첫 번쨰 요약
컴포넌트를 만들어서 사용자 인터페이스를 만든다. => 사용자 인터페이스의 HTML를 규정한다.


2. JSX 자세히 살펴보기
리액트에 관련된 두 가지 의존성이 존재한다. => react와 react-dom이다.
현대의 react코드는 react 의존성을 js 파일에서 보기 힘든데 그 이유는 react 의존성은 설정에 영향을 주기 때문이다.
=> JSX를 브라우저 친화적으로 바꾸는 행위를(React 객체를 사용해서) 자동으로 하기 때문에 react 객체를 보기 힘든 것이다.
=> 과거에는 항상  추가하여 HTML를 생성했다. 

* 왜 하나의 루트 요소만 return 해야 하는가?
=> JSX는 과거에는 React 객체를 사용해서 작성했다. JS의 return은 하나만 가능하다.
=> 현대 JSX를 하나의 코드라고 생각하면 루트 요소가 없다면 여러개를 반환하는 것이다.
=> 현대 JSX는 배후에서 React 객체를 사용해서 브라우저 친화적인 코드로 바꾸는데 그 떄 return 요소가 하나가 아니라면 당연히 오류가 발생한다.


3. 컴포넌트 파일 정리하기
../ => 뒤의 경로
./ => 동일한 경로

=> 현재 vsCode는 폴더를 생성하고 파일을 옮기면 자동으로 import 구문이 업데이트 되지만 App.js는 수동으로 해줘야 한다.
=> import 경로는 현재 파일이 있는 위치에서 생각하면 된다.


4. 대안적 함수 구문



1. 이전상태와 함꼐 저장을 하든가, 이전 상태에 기대어 변화를 줄 때는 setFunc()의 콜백을 사용해야 한다.
데이터가 변동되면 재평가가 일어날 조건이 되는 것이다. => setFunc()이 호출되었을 떄 기존 상태 데이터가 변동되었다면 재평가가 일어나는 것이다.


2.  APP.js는 최상위 컴포넌트이다. => 여기서 재평가가 시작되면 모든 컴포넌트가 재평가가 되는 것이다. 상태를 올려서 데이터를 뿌려줄 떄 이 논리구조를 파악하고 있어야 한다.


3. 하나의 프로젝트를 생성할 떄 selectedProjectId, projects 데이터+아이디 배열를 생성하고 바뀐 데이터를 기반으로 리렌더링을 실시한다. 


4. Input 태그에 양방향 바인딩을 할 떄 초기값을 부여하지 않으면 value=undefinded가 된다. => React가 인식하지 못한다.
=> 빈 문자열로 초기값을 주면 된다.


5.  filter ! => 일치하는 것을 제외하고 모두 배열로 만든다.
!는 역의 개념이다.

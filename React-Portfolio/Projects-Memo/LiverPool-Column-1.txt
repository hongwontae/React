1. 환경설정
1-1. Tanstack-query/ React-Router를 사용
1-2. npm install를 통해 설치
1-3. createBrowserRouter, RouterProvider => router 설정
1-4. QueryClientProvider, QueryClient => Tanstack Query 설정


2. 환경설정-2
2-1. tailwind를 사용
2-2. npm insall를 통해 tailwind 설치/ npx tailwindcss init -p 설치 (tailwind.config.js)/ postcss (css 플러그인)
2-3. 테일윈드 설정 파일에 경로를 설정한다.
2-4. 루트 css 파일(이를 global.css라고도 한다. 현재는 index.css에 해당 설정이 존재)
=> @tailwind base; @tailwind components; @tailwind utilities;를 작성
=> 다른 css 코드가 존재하면 해당 코드는 작동하지 않는다.


3. 환경설정-3
3-1. zustand 사용
3-2. npm install zustand


4. Navigation Component
4-1. TailWind와 css module를 사용
4-2. NavLink의 className은 함수를 받아서 사용해야 하기 떄문에 module를 이용해서 li의 자식 a를 target 하여 적용
4-3. max-width, m-auto => 최대 길이를 설정 + margin-auto를 통해 부모 container  가운데 위치
4-4. flex, justify-center을 통해 부모 직접적 자식 중앙 배치 + fontSize 적용
4-5. ul => flex + gap-6를 통해 row배치 gap으로 동일한 간격 배치

4-6. NavLink는 className으로 함수를 받을 수 있다. 해당 함수의 인자는 객체를 가지고 있는데 isActive가 중요한 프로퍼티이다.
=> isActive는 해당 NavLink 경로와 현재 경로가 일치하면 active className을 동적으로 갖는다.
=> acitve일 떄 효과를 넣어주면 해당 경로에 사용자가 존재한다는 효과를 줄 수 있다.


5.  Layout 구성
5-1. 각 페이지들은 Navigation이 존재하고 같은 배경색과 동일한 폰트를 갖게 하고 싶다.
5-2. header/main/footer 형식으로 모든 페이지가 일관성을 갖췄으면 좋겠다.
    Layout 컴포넌트 생성 => Outlet 컴포넌트 생성 => 네비게이션 컴포넌트 생성

5-3. tailwind의 설정을 통해 google-font를 사용한다.
(font-family => css에서 폰트를 지정할 떄 사용되는 일련의 폰트 이름들을 의미한다. 해당 목록은 브라우저가 폰트를
렌더링할 떄 사용할 폰트의 순서이다. => 로드가 되지 않거나 설치되지 않을 떄 백업 역할)
( ex) font-family : 'Roboto', 'Helele', 'Arial','Sans-serif' ) => 처음에 Roboto 안되면 Helele => Arial...
5-4. 5-3의 개념이 tailwind에서도 사용된다. tailwind.config.js에서 배열로 폰트를 나열하면 된다.
5-5. global 폰트를 위해서 layout을 감싸는 div를 생성해서 className으로 구글 폰트를 넣는다.


5-6. header, main, footer의 비율을 맞추기 위해 flex를 사용한다.
=> 모든 Page들을 아우르는 Layout를 덮는 div를 생성하고 flex/ flex-col/ h-min-screen
=> outlet을 덮는 div에 flex-grow 1를 설정한다. => header와 footer의 높이를 제외한 모든 공간을 갖는다.
=> 그리고 h-min-screen 100vh, Outlet(Pages 컴포넌트) 컴포넌트에 flex-grow 1을 주었기 떄문에
요소들이 적절히 배치된다.


6. Custom tailwind
6-1. 먼저 index.html이나 global css 파일에서 <link>나 @font-face를 통해서 외부에서 폰트를 가져온다.
6-2. tailwind.config.js 파일의 theme 객체의 extend 객체에서 원하는 CSS를 선택하고 객체를 부여한다.
fontFamily : {globalCutomFont : ['가져온 폰트 이름','예비 폰트', '예비 폰트'....]}
6-3. JSX의 요소에 className에서 사용하면 된다.

6-4. font 뿐만 아니라 폰트, 특정 스타일을 커스텀마이징할 수 있다.








1. Tailwind를 사용하면 일부 HTML 요소의 CSS 기본값이 일부 사라진다.
=> h1의 경우 <p> 태그처럼 움직인다. => 기존에 가지고 있던 M이 사라진다.
=> button의 경우 박스모양 처럼 나타나지 않고 block 요소처럼 움직인다.


2. zustand를 사용해서 전역적으로 상태관리하기
2-1. zustand-store라는 폴더를 생성
2-2. 폴더 내에서 homepage-store.jsx 파일 생성
2-3. import {create} from 'zustand' => 이를 통해서 상태와 상태관리 매서드를 생성하고 사용한다. => export 해야함

2-4. zustand는 create 함수를 호출하고 변수에 할당하면 해당 변수가 상태값과 상태관리 메서드를 객체를 할당받는다.

ex) export const useStore = create((set)=>({
    toggleStates : {
        ....
    },
    toggleHistory : ()=>set((prev)=>({
        toggleStates : {
            ...prev,
            toggleHis = !prev.toggleStates.toggleHis
        }
    }))
}))


3. imgae 작업
3-1. 해당 이미지는 홈페이지에서만 보이기 떄문에 리액트 애플리케이션에 저장한다.
3-2. 컴포넌트와 함께 이미지가 관리되기 때문에 src 폴더에 assets 폴더에 이미지를 저장한다.
3-3. data 폴더를 생성하고 image, alt, id가 존재하는 배열 객체를 생성하고 사용할 컴포넌트에서 map를 사용해 렌더링한다.
3-3. 이미지의의 컨테이너에 flex flex-row justify-center flex-wrap => 가로 형식, 기본축 가운데 맞춤, 넓이가 좁이지면 밑으로
3-4. w-[] h-[]를 공통적으로 부여해서 일관된 크기/ object-contain => 사진 중앙 맞춤

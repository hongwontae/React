1. axios
1-1. promise 기반
1-2. 자동 JSON 형식으로 변환하여 요청하고 응답한다.
1-3. header 설정 쉽다.


2. node.js
2-1. next를 호출해야 다음 미들웨어로 넘어간다.
2-2. app.use((req, res, next) => {}) 콜백 함수의 인자의 순서를 지켜줘야한다.
2-3. app.get/post/delete/put를 사용하여 받을 수 있다.
2-4. 백엔드에 존재하지 않는 요청을 보내면 app.use()를 통해 에러처리를 한다.
2-5. 같은 경로더라도 get/post/put..에 따라서 다른 경로로 인식한다.

2-6. express.Router()를 사용해서 요청 처리 코드를 분할처리했을 떄 경로 필터링을 할 수 있다.






*** 삽질
1. useQuery를 사용할 떄 인자를 컨트롤 하기 위해 화살표 함수 안에서 함수를 호출했는데 return을 사용하지 않았다.
=> 개 삽질했다.

2. axiost를 사용할 떄는 fetch와 다르게 response.json 할 필요가 전혀 없다.
=> 요청 전송할 떄 한번에 await를 사용하면 된다. => 이미 완성되어 있어서 await를 사용하면 에러가 난다.

3. 백엔드로 요청을 전송할 떄 https를 사용해서 에러가 발생했다.
=> 삽질 그만
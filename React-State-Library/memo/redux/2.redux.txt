1. redux 사용법
1-1. action을 정의합니다.
(action은 reducers가 어떤 상태 변경 함수를 사용할지 도와주는 객체입니다.)
=> type과 payload를 정의할 수 있습니다. type은 상태 변경 함수 구분/ payload는 상태 변경하는데 필요한 메타 데이터
1-2. function upAndDown(num){
    type : 'UP-DOWN',
    payload : num
}


1-3. reducers를 정의합니다.
=> 함수 형태로 정의하고 첫 번쨰 인자로 state, 두 번쨰 인자로 action을 받습니다.
=> 함수 내부에 if문이나 switch case문으로 action.type에 따라 새로운 변경 상태를 return 합니다.


1-4. store 생성
=> import { createStore } from 'redux';
=> export const store = createStore(reducerFunction);
=> store를 생성하고 reducer 함수를 연결합니다.


1-5. Provider와 store
=> redux 스토어를 사용하기 위해 애플리케이션 최상위에 <Provier store={store}><App/></Provier>으로 감쌉니다.


1-6. 사용할 컴포넌트에서 useDispatch와 useSelector를 사용하여 값을 가져오고 값을 변경합니다.
=> const dispatch = useDispatch()
=> dispatch({type : 'INCREMENT', payload: num})
=> dispatch는 action 객체를 받아서 reducer 함수를 트리거하는 역할을 합니다.

=> const count =  useSelector(state=>state.count)
=> 상태를 읽고 싶을 떄 가져오는 훅입니다.
=> 자동으로 store와 구독관계가 설정됩니다.
=> 상태가 변경되면 해당 상태를 가지고 있는 컴포넌트만 리렌더링됩니다.
=> useSelector의 (state)는 Redux 스토어에서 가져온 전체 상태 객체입니다.

=> 만약 reducerFunction이 두 개라면 combineReducers({
    counternn : counterReducer,
    user : userReducer
}) 결합하고 이가 state가 됩니다.
=> useSelector(state=>state.counternn.count);
=> 즉, combineReducers에 의해서 {
    counternn : {count : 1},
    user : {name : '', age : ''}
} 이런 형태가 됩니다.

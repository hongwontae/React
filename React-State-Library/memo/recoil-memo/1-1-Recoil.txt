1. Recoil이란?
=> Facebook에서 개발한 React 상태 관리 라이브러리입니다.


2. Recoil의 주요 개념

2-1. Atom
=> 애플리케이션에서 상태(state)의 기본 단위입니다.
=> Atom은 읽기/쓰기 가능한 상태로, 하나의 Atom을 여러 컴포넌트에서 구독(subscribe)할 수 있습니다.
=> Atom에 변경이 발생하면 해당 Atom을 구독하는 모든 컴포넌트가 리렌더링됩니다.
ex) export const countState = atom({
  key: 'countState', // 고유한 키
  default: 0, // 초기값
});

2-2. Selector
=> 파생 상태를 계산하는 데 사용됩니다.
=> Selector는 Atom 또는 다른 Selector를 기반으로 새로운 상태를 생성합니다.
=> 비동기 데이터도 Selector로 처리할 수 있습니다.
ex) export const doubledCountState = selector({
  key: 'doubledCountState',
  get: ({ get }) => {
    const count = get(countState);
    return count * 2;
  },
});

2-3. RecoilRoot
=> Recoil 상태를 제공하기 위한 최상위 컴포넌트입니다.
=> React 앱의 루트에 이 컴포넌트를 추가해야 Recoil 상태를 사용할 수 있습니다.
ex) const Root = () => (
  <RecoilRoot>
    <App />
  </RecoilRoot>
);


3. atom과 selector의 관계
3-1. selector도 상태입니다.
3-2. 그러나, 내부적으로 값을 저장하지 않습니다.
atom과 selector과 연결되어 있다면 atom이 변경되면 selector도 자동으로 다시 계산되는 매커니즘입니다.

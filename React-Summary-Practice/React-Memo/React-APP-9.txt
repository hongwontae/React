1. 인증은 두 가지 대중적인 방법이 존재한다.

1-1. 서버 사이드 세션

1-2. 인증 토큰
=> 사용자가 유효한 자격 증명을 전송하고 허가 토큰을 생성하나 저장하지 않는다.
=> 토큰은 단지 알고리즘에 따라 생성된 스트림이다.
=> 토큰은 백엔드에서 생성하고 클라이언트에 전송한다. 클라이언트는 해당 토큰을 저장하고 리소스에 접근할 때마다 전송한다.
=> 백엔드에서만 토큰의 유효성을 검사할 수 있다.


3. 쿼리 매개변수
3-1. url ? 뒤에 붙는 변수를 의미한다.

3-2. 형태
1. ?로 시작
2. key=value 형식
3. 이어 붙일거면 &사용

3-3. 리액트 라우터 돔 라이브러리의 프로젝트는 쿼리 파라미터를 link, NavLink의 to에 넣는다.


4. Logic
4-1. login 이후에 action으로 http 요청을 보내는 로직이다.
4-2. new URL(request.url).searchParams를 통해 쿼리 파라미터를 가져와서 동적으로 login과 create-user 백엔드
요청을 알아낸다.
4-3. if문을 통해서 올바르지 않은 쿼리 파라미터일 떄 throw json을 던진다.
4-4. status, response.ok을 통해 에러를 처리한다.


5. token 인증 Logic
5-1. token의 유무에 따라 접근 할 수 있는 페이지가 달라야 한다.
5-2. getAuthToken을 통해 token을 가져오고 조건부로 navigation이나 edit, delete 접근 권한을 줘야한다.



*** throw를 던지거나 알맞지 않은 url로 접근을 할 떄 해당되는 errorPage가 렌더링되는 것이다.





1. 리액트 실행 순서
1-1. APP Function이 실행된다.
1-2. App.jsx의 JSX가 실행된다.
=> 이 떄 DOM과 커스텀 컴포넌트들이 존재한다.
=> 커스텀 컴포넌트를 만나면 그 안에 모든 것을 실행하기 전까지 밑의 JSX로 내려가지 않는다.


2. import {memo} from 'react';
2-1. memo는 컴포넌트 함수를 덮는 함수이다.
2-2. 부모 컴포넌트가 재실행되었다. => memo로 덮여진 컴포넌트는 부모가 내려준 props가 변경되었다면 재실행한다. 그러나
props가 같은 값이라면 재실행하지 않는다.


3. 상태 변화를 일으키는 컴포넌트의 재배치를 통해 부모 - 자식 관계를 피하려 재실행을 피할 수 있다.


4. props로 내려준 dom이나 내장 컴포넌트는 재실행, 재생성되지 않는다.


5. useCallback()
=> 컴포넌트가 재실행될 떄 컴포넌트에서 작성된 함수들도 재실행된다.
=> 이 때 useCallback으로 덮으면 해당 함수는 재실행되지 않는다.
=> 재실행되지 않았다는 것은 동일한 콜스택 값을 유지한다는 것이다.


6. useMemo()
=> 일반 함수의 재 호출을 방지할 떄 사용하는 Hooks
=> useMemo의 첫 번쨰 인자의 구조는 ()=>{방지할 함수()}, 두 번쨰 인자는 의존성 배열이다.


1. src를 통해 이미지의 위치를 찾고자 한다.
=> src에 {http://localhost:3000...} => fetch을 사용하지 않고 백엔드에 요청이 전송되어서 image의 경로를 찾고 가져온다.


2. React 상태관리를 할 떄는 기존의 참조값을 변경하지 않는 것이 핵심이다.


3. useContext는 상태관리를 해주는 훅이 아니고 props-drilling을 해결하는 Hooks이다.


4. reduce 함수를 사용할 떄 => 재실행되는 컴포넌트이고 데이터를 추가하는 로직이 아니라 quantity만 더해주는 로직임을
알고 있자.


5. Modal trigger 로직

5-1. Modal custom 컴포넌트 생성 + children
5-2. cart 컴포넌트 + Modal를 최상단 root로 안쪽 컨텐츠 children으로 구현
5-3. Modal의 open props, useEffect 의존성 open => if문을 통해서 open truthy를 이용해서 showModal 구현
5-4. 사라질 떄는 클린 업 함수를 사용하여 close 구현 => open이 false 값을 가져와서 useEffect가 실행되는데
if문에 걸린다. 그 전에 cleanUp 함수를 실행한다. 그럼으로 완벽히 DOM에서 inVisible 형태가 된다.


6. dialog의 onClose props
6-1. Esc를 눌렀을 떄 트리거 된다.
6-2. DOM에서 사라졌을 떄 트리거 된다.


7. button의 type이 button이면 form의 onSubmit의 대상이 아니다.
1. useQuery의 queryFn의 매개변수의 queryKey
1-1. queryFn의 매개변수에 queryKey의 값을 매개변수에 자동적으로 추가된다.
1-2. useQuery({
    queryKey : ['events', {id : param.id}],
    queryFn : ({signal, queryKey})=>{
        return fetchEvents({signal, ...queryKey[1]})
    }
})


2. 리액트 쿼리와 리액트 라우터
2-1. 로더를 사용해서 data를 가져오고 useQuery는 캐시 기능으로 사용한다.
=> loader를 사용할 떄는 return 값으로 queryClient.fetchQuery()를 주면 된다.

2-2. action을 사용하면 mutate 함수 대신 사용하는 것이다.
=> useSubmit이 호출되면 action이 호출된다.
=> put 메서드를 보내면 await로 http 요청을 기다리고 await 쿼리 무효화를 사용한다.



3. 리액트 쿼리 error 처리
=> http 요청이 실패했을 경우 isError가 true 값을 갖는다.
=> 요청을 3 번까지 시도하고 안됐을 경우 isError를 true로 처리한다.



*** queryClient.무효화는 비동기 함수이다.
=> 잘 고려해서 사용해야 한다.
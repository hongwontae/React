컴포넌트 => html, css, js의 결합체이다. 이 결합체가 모여 사용자 화면을 구성한다.
리액트에게 목표 상태를 정의하는 것이 제일 중요하다. => 선언적 접근방식

리액트 설치하기
git bash Or 터미널에서 npx create-react-app 폴더명

13. 리액트 초기화면 분석
src => 컴포넌트 작업을 할 공간
React => JS코드로 이루어진 것이다.
localhost:3000 => 제일 먼저 실행되는 파일은 index.js
npm start => 코드를 실행하여 브라우저에 전달한다. 전달 전에 코드를 변형해서 추가 기능이 브라우저에서 작동하도록 해준다.
일반 js에서 css 파일을 가져올 수 없다.
createRoot => 리액트를 사용하여 구축할 전체 사용자 인터페이스의 메인 엔트리 포인트, 메인 훅을 생성한다.
root.render => 사용자 인터페이스가 로딩되는 웹 페이지를 어느 곳에 위치해야 하는지 알려준다.
public - index.js => 리액트는 하나의 html 파일만 이용하는 바로 index.js이다. singe page application => spa이다.
import로 javaScript를 가져올 때만 확장자를 빼고 가져온다.
./ => 같은 경로에 존재한다는 뜻이다.
요약 => index.js 단 하나의 싱글 페이지로 React는 구성된다. <div id=root><div/>에서 root란 아이디를
document.getElementId('root')를 사용하여 잡아주고 CreatRoot로 리액트 구축할 것이라 명시한다.
그리고 root.render를 이용해서 리액트가 위치할 파일이 무엇인지 알려준다.

14. jsx
jsx는 javaScript코드 안에 html 코드가 있는 것을 의미한다.
jsx는 브라우저에서 자동으로 근본적인 js로 변환된다. => npm start가 해줌
return으로 반환되는 코드가 jsx이다.

15. 리액트의 작동방식
js는 document.CreateElement 같은 방식으로 태그를 생성하고, text를 넣기위해 textContent를 사용하고, 
document.getElementById로 사용될 곳을 정해서 뿌려준다. => 명령형 접근 방식
React는 목표 상태를 jsx로 정의해주면 된다.

16. 컴포넌트 만들기
컴포넌트 트리가 기본 구조이다.
컴포넌트는 js 함수이고, 최종적으로는 html 코드를 반환하는 함수이다.
사용자 지정 컴포넌트는 항상 첫 글자가 대문자이어야 한다. why?
=> 일반적인 html 태그의 시작은 소문자라 소문자로 적으면 내장 요소로 찾기에 오류가 발생한다.
컴포넌트를 만들었으면 홀로 간직할 게 아니라면 export default 함수명 으로 내보낸다.
그리고 해당 컴포넌트를 사용하고 싶은 파일은 import하여 사용한다. import 함수명 form 파일경로
(./ => 같은 경로에 존재, ../  =>뒤로)

17. return jsx의 규칙
Single root(기준)
많은 html 태그나 jsx코드가 들어간다면 <div><div/>나 <></>,<span><sapn/> etc..로 감싸줘야 한다.
하나의 엘리멘트를 유지해야 하기 때문이다.

18. Css
js파일을 import하는 것과는 다르게 css 파일의 import는 import './파일명.css'이다. 
class가 아니라 className이다.

19. 동적 표현
컴포넌트 재사용성, 분리성을 가지고 있다.
jsx내의 {}중괄호는 기본적인 js 코드를 실행할 수 있다.




















---- 개발자는 리액트를 통해 목표 상태를 구축하는 것이 제일 중요하다.--------


















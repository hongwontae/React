ReactUd 2강

50. 이벤트 리스닝 및 이벤트 핸들러

적합한(이벤트를 지원하는 요소가) jsx 요소에 js처럼 이벤트 핸들러를 추가할 수 있는데 react에서는 간단하게 처리할 수 있다. onClick,OnChange..등
on은 이벤트 처리를 한다고 선언하는 것이다. on은 이벤트에 붙어다닌다.

이 이벤트를 발생하려면 함수를 정의해야 하는데 jsx내에서 {() => {}} 익명함수로 지정해도 되고 컴포넌트 내에서 함수를 정의하고 이름만 기술해도 된다. 함수실행이 아니라 이름만 적어야 한다. 

이름 규칙 
~~~Handler로 이름을 짓는 것이 개발자의 관례이다.


jsx내에서 {} 쓰는 두 가지 이유
표현식 사용, 속성전달(함수를 전달, 객체를 전달)


51. 컴포넌트 기능이 실행되는 방법
단순히 이벤트를 속성값으로 주고 함수내에서 값을 변환시키는 코드를 작성해도 리액트는 반응하지 않는다.
왜? => 리액트는 절대 반복하지 않는다.
리액트는 처음 실행되었을 때(렌더링) 모든 함수를 호출하고 실행한다. 그 이후에는 다음 명령까지 반응이 없다. 

52. State
useState => 컴포넌트 함수가 다시 호출되는 곳에서 변경된 값을 반영하기 위해 state로 값을 정의할 수 있게 해주는 함수이다.
useState를 리액트 훅이라고 부른다. 리액트 훅들은 앞에 use가 붙는다. 그리고 훅들은 함수 내에서 정의되어야 한다.
useState는 어떤 값을 반환한다. 그 값이 특별한 변수에 접근할 수 있게 한다. 단지 반환만이 아니라 변수에 새로운 값을 할당하기 위해 우리가 호출할 수 있는 함수도 반환한다.

const [초기값, set변할 값] = useState() 
첫 번째 요소는 현재 상태값, 두 번째 요소는 그것을 업데이트하는 함수
=> 이렇게 사용하면 변할 상태값으로 다시 실행한다.



















서드 파티 라이브러리? 
app => 컴포넌트

jsx => 특수 구문
js xml을 의미한다.

jsx로 반환하면 브라우저에서 코드를 변환하여 읽는다.

컴포넌트는 기본적으로 자체 html요소일 뿐이다.
리액트의 목표상태를 규정했고 보이는 것을 업데이트하는 dom 지시사항들을 생성하는 역할을 한다

app.js가 변경되면 자동으로 화면도 변경된다.

js와 뷰를 연동하기 위해서는 많은 작업을 해야 하지만 react는 최종상태를 태그 날려주면 된다.
=> 컴포넌트를 이용한 방식

HWT식 react 분석
1. 각 파일의 함수가 컴포넌트가 된다. 자바스크립트 함수 = 컴포넌트
2. 함수의 리턴식에 html코드는 가능, function 바로 밑에는 불가능
=> return은 jsx문으로 쓰여져 있어서 그렇다.
3. 파일명은 소문자로 적어야 된다.
4. 자바스크립트 함수로 컴포넌트를 만들고 컴포넌트의 return문은 jsx로 만들고 html코드를 반환한다.

<App/> => 최상위 컴포넌트이다. html페이지에 직접 렌더링되는 컴포넌트이다. 나머지 요소들을
import하여 가져오고 하나의 컴포넌트 형식을 유지한 채 렌더링된다

함수를 규정하고 이 컴포넌트를 다른 곳에서 사용하게 만들고 싶다면 export default 함수명을
맨 밑에 적어둔다
최상위 컴포넌트에서 import를 한다면 그 컴포넌트를 html형식에 맞취 사용할 수 있다.

return의 jsx(html)하나의 조각들은 반드시 한 개의 루트 요소를 갖는다.
=> 요소들은 <div> 태그를 감싸주면 해결된다

css를 위해 하나의 컴포넌트를 위한 하나의 css파일을 만들거나 style 라이브러리를 추가한다.
ccs 파일을 구축하면 css파일을 적용할 컴포넌트에사 import를 한다.
jsx에 class를 부여하려면 className이라는 키워드를 사용한다

jsx안에 {}여기서는 자바스크립트 코드를 실행할 수 있다.
jsx {} 중괄호 내에서는 상수나 변수를 단지 선언하면 값을 추출헤준다.

js에서는 함수에서 매개변수를 받아들이게 해서 재사용성을 증가시킨다.
=> 함수의 매개변수 달라지면 다른 결과값을 출력한다

예시
=> app 컴포넌트에 상수로 된 변수 선언이 있고 하위 컴포넌트에 변수 선언의 이름을 가져와서 li 태그로 사용하려고 한다.
일반적으로 컴포넌트에서 다른 컴포넌트로 저장된 데이터를 사용할 수 없다.
=> props로 해결하려고 한다. 
html은 속성을 가지는데 리액트로 사용자 지정 컴포넌트가 속성을 가질 수 있다. 이러한 개념은 속성이라고 부르지 않고 props라고 부른다.
데이터를 해당 컴포넌트가 아닌 다른 컴포넌트에서 받아오는 행위 => props개념

jsx내에서 사용자 속성이란?
태그내에서 내가 규정할 수 있는 속성<=내가 임의로 부여하는={자바스크립트 코드}
props => 사용자 지정 요소에서 우리가 얻는 속성에 대한 모든 값을 갖고 있는 객체이다.

요약 => 우리는 App.js에서 배열안에 객체를 생성했다. 그리고 각각의 컴포넌트에 속성을 부여했다.
근데 기존의 html의 속성은 임의로 부여할 수 없었는데 리액트는 그것이 가능하다. 그래서 각각의 컴포넌트에 속성을 부여(이름-값)했다. 그리고 하위 컴포넌트에서 이를 인식하기 하는 것은 props라는 매개변수이다. props는 객체이고 우리가 부여했던 속성의 전체 값을 가지고 있다. 그래서 하위 jsx에서 props.title이라는 코드를 작성하면 값이 튀어나오는 것이다.


태그 사용시 </> 닫는 태그만 사용해도 적용된다

props 대전제
=> 상위에서 하위로 하위에서 최하위로 이동한다. 두단계를 건너뛰지 못한다.

42. 예제
1. expense.js 파일 생성한다. expense.css 파일 생성한다.
2. app.js에서 ExpenseItem 태그들을 가져온다.
3. expenseItem을 임포트 한다. import ExpenseItem from './ExpenseItem'
4. expenseitem 사용가능 하지만 expense 상수 오류는 여전 
5. 변수를 가져오기 위해 props를 사용한다.
6. app.js에서 이제 expense.js에서 지정한 로직을 가져와야 한다. 임포트 한다.

props는 상위 컴포에서 하위 컴포에 내려주는 것이고 자식은 읽기만 가능하다.
사용자 지정 속성에서 ""문자열을 {}값을 전달할 떄 사용한다.
객체형식으로 전달된다.

비구조화 할당 => 배열이나 객체를 꺼내서 값으로 만드는 것이다.



props, children 정리
props: 어떤 컴포넌트를 import해와서 사용하는 부모(상위) 컴포넌트 (ex. App.js)에서 정하는 값입니다. 부모 컴포넌트에서 설정해서 자식 컴포넌트로 전달하여, 자식 컴포넌트에서 쓰입니다.
children: A 컴포넌트 사이에 B 컴포넌트가 있을 때, A 컴포넌트에서 B 컴포넌트 내용을 보여주려고 사용하는 props입니다.
profile
DongGu













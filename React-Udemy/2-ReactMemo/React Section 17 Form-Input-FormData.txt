1. Form
Form 태그를 통해 데이터 추출과 검증과정을 만들어낼 수 있다.

(input과 label은 함께 다닌다. => label의 for 속성이 input의 id 속성과 같다면 연결이 된다. 이 경우 라벨을 누르면 input이 반응한다.)

(input의 type 속성 input 요소가 어떤 역할을 할 것인지를 결정한다.)
text, password, file, radio, checkbox, button, hidden, submit, reset, image, number, url, date......

React에서 label의 for은 htmlFor 속성이다. => 이름만 바뀐 것이다.

form의 button을 클릭하면 자동으로 양식이 전송되면서 새로고침된다. => 과거에는 서버에서 웹 페이지를 관리하는 것이 대부분이었기 떄문에

1-1. button tag type="button"을 주면 양식을 제출하지 않고 새로고침을 하지 않는다.
1-2. form tag onSubmit 이벤트 핸들러는 event 객체를 받는다. event.preventDefault()를 사용한다.
=> form의 onSubmit은 form이 전송될 떄 trigger되는 이벤트이다. => 모든 버튼에 해당한다. 이벤트 객체 중 기본동작을 막는 preventDefault()를 사용해서 양식이 제출되지 않도록 한다.\

(button의 onClick 이벤트에 prevent를 걸면 버튼 하나만 기본동작을 막는다. => 전체를 막고 싶다면 form의 onSubmit 이벤트를 트리거 해야 한다.)
(event 객체는 이벤트 핸들러에 자동으로 생성된다. But JSX 이벤트 핸들러를 익명함수로 작성했을 경우 event 객체는 이월되지 않는다.)


2. Input State 관리

2-1. useState를 여러 개 생성하는 방식
=> Input의 onChange, Input의 value 속성을 통해 양방향 바인딩를 하고 각각 관리하는 방식
2-2. useState를 하나만 생성하고 객체 형식으로 관리하는 방식
=> enterValue.email/ enterValue.password처럼 value를 주고 onChange의 이벤트 핸들러는 익명함수를 주고 prevState를 이용한다.


3. Refs 사용자 입력 수집
ref를 dom과 연결해서 사용한다. => 입력값을 가져오거나 초기화할 떄 많이 사용한다.


4. FormData
FormData => 브라우저 내장 함수 => 양식에 입력된 각기 다른 값들을 쉽게 얻을 수 있도록 도와주는 객체이다.

FormData가 input를 가져오려면 name 속성이 지정되어 있어야 한다.

object.entries() => 객체를 배열로 만들어준다. 객체의 키와 값을 [key:value]의 배열로 반환한다.
object.fromEntries() => 2차원으로 구성된 배열의 키-값 쌍 목록을 객체로 바꾼다.

formData.append(name, value) => name과 value를 가진 폼 필드를 추가
formData.append(name, blob, fileName) => <input type="file">형태의 필드를 추가. 세 번째 인수 fileName은 (필드 이름이 아니고) 사용자가 해당 이름을 가진 파일을 폼에 추가한 것처럼 설정해줌
formData.delete(name) => name에 해당하는 필드를 삭제
formData.get(name) => name에 해당하는 필드의 값을 가져옴
formData.has(name) => name에 해당하는 필드가 있으면 true를, 그렇지 않으면 false를 반환


5. form 초기화
button의 type="reset"를 사용하면 button을 감싸고 있는 폼의 input들이 초기화된다.
form tag의 dom의 객체 reset 메서드를 사용하면 form의 인풋들이 초기화 된다.



6. 유효성 검사
Input의 onBlur => 입력이 포커스를 잃게 될 떄 트리거된다.

state를 두 개 생성해서 입력값과 검증로직을 생성한다. => 검증 데이터를 blur와 onChange를 적절히 사용해서 검증한다.


7. Form 제출시 유효성 검사
onSubmit를 사용한다.



8. Input 속성 유효성 검사 (form validation)
input의 required => 입력창이 비어있는 상태로 제출되는 것을 허가하지 않는다. type의 속성을 무시하는 입력값도 허가하지 않는다.

required => 입력창이 비워져 있거나 type의 속성에 의거하지 않는 입력값을 받아들이지 않는다. 이는 input 뿐만 아니라 양식 요소 전체에서 사용될 수 있는 속성이다.

Input maxLength/ minLength => 입력값의 최소/최대값을 설정한다.


9. 인자에 콜백 함수를 주면 함수 본문으로 가서 판단해야 한다.






























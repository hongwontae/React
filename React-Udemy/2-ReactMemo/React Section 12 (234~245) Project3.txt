1. 배열과 length 로직을 통해 렌더링한다. => 클릭 이벤트를 통해 정답을 배열 안에 담고 배열의 length에 따라 외부의 배열의 인덱스를 변경함으로써 문제를 바꾼다.


2.   const shuffledAnswers = [...QUESTIONS[activeQuestionIndex].answers]
    shuffledAnswers.sort(() => Math.random()-0.5) 
    // 랜덤처리
    // index와 length는 시작점이 다르기 떄문에 question.length와 userAnswers.length가 같아지면
    // 배열의 범위를 벗어나기 때문에 if check이 위로 올라가서 JSX를 리턴해줘야 한다.


3. useCallback를 사용하면 재평가의 대상이 되지 않는다. 의존성 배열이 바껴야 재평가의 대상이 된다.



4. strictMode 모든 컴포넌트 함수를 두 번 실행시킨다.
커스텀 컴포넌트의 key props는 key의 값이 변경될 떄마다 오래된 컴포넌트 인스턴스를 삭제하고 새로운 인스턴스를 만들어낸다.


5. 하나의 컴포넌트에서 형제 레벨에서 서로 다른 커스텀 컴포넌트에게 key props를 동일하게 주면 오류가 발생한다. 

 





















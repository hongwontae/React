1. 리액트 오류 메시지 이해하기
리액트는 하나의 루트 요소만을 반환하기 때문에 하나의 요소로 모든 요소를 둘러싸야 한다.
=> 이 규칙을 지키지 않으면 => Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>? (43:6) 에러 메시지가 반환된다.

함수의 이름과 이벤트 핸들러의 이름이 같지 않은 경우 에러가 발생한다. => 쉽지만 인식하기 어려운 에러이다.


2. 코드 흐름 및 경고 분석
터미널의 오류 메시지나 Console창의 오류 메시지를 보고 로직을 거슬러 올라가서 원하지 않는 프로세스를 찾을 수 있다.
그리고 console.log()를 사용해서 들어오는 데이터를 판단하는 것도 좋다. 들어오는 props를 처리할 떄 좋다.


3. 중단점 (breakPoint) 작업하기
Sources에서 React 파일이 존재한다. 중단점을  생성해서 코드를 중단점까지 실행하고 결과를 볼  수 있다.


4. 리액트 DevTools 사용하기
chrome의 확장 프로그램으로 React Developer Tools이 존재한다.
개발자도구 - Components => 컴포넌트 트리를 볼 수 있다. 큰 장점이다.
props => 해당 컴포넌트가 가지고 있는 속성과 데이터들
rendered by => 어떤 것에 의해서 렌더링이 되었는가?
source => 해당 코드의 위치는?
hooks => 해당 컴포넌트의 훅은?

